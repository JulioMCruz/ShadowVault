{"noir_version":"1.0.0-beta.2+1a2a08cbcb68646ff1aaef383cfc1798933c1355","hash":7934555692855374679,"abi":{"parameters":[{"name":"password","type":{"kind":"array","length":24,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"boolean"},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"}}},"bytecode":"","debug_symbols":"nd3bahxnFobhe9GxD3rt1/KtDEOQbTkIhGS8GRhM7j2VYDlBXVi868yt5hWYKvX/9YNEf7/5cPfu2++/3T9+fPpy8/Y/328ent7ffr1/ejwefb9R//trXz7dPv718MvX289fb956xJubu8cPx79S/nhz8/H+4e7mbeof/31zo4GLxEWdFZH5o4iyl0XjYmhhF1zIaVE/i74qFBeGC8fF6TXP8h9F9ssraImLwkXj4vSaZ/8sRl8UfsGF4EJxcXrNqy8/iup6WTguAheJi9NrXvOzmKuicTG0iAsuTq95z/MVnMvLOzEUF4aL02s+8fxzPvny5zwCF4mLoqdBNC6GFolf21NwobgwXODX9gxcJC4KF6+d59fF0KIu9PwowYXiwnDh9PyowEXionDx2nl+XQwt+kLPqBZcKC7wed5Oz6gOXCQu8Hne/cr//LoYWsyFnpyDz/PB5/ng83wcF/g8H3yeT+GicTG0kMuFTgC5CE+UJ6fX3Ueez6lLXSXOk+BJ8qR4gt+oywW/Uxe58ER4gt+sixhPnCfBk6TzSaR4gt+yiwxO9MIT4Ql+2y5qPHGeBE9e45qTpHjy2mF/NXNEByd24YnwROnUkXOp+3XiPAmevAY3J0nxpOl8kXOv+2XiF54IT5QnhjeMO0+CJ8mT4glGHHGsOBJ89Z3b3S83zDne/Trhqy/46gu++oKvvuCrL/jqC776OOIJVzxJvvqSrz4OecIlT5KvvuSrL/nqS776OOcJ9zwpvvqKrz5OesJNT4qvvuKrr/jqK776OOwJlz1pvvqarz6Oe8J1T5qvvuarr/nqa776OPEJNz7hyCfDV9/w1cedTzj0CZc+Gb76Bq8+5danF7z69KI8MZ44T4InyZPiCf+lHG59yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUptz7l1qfc+pRbn3LrU259yq1PufUZtz7j1mfc+oxbn3HrM259xq3PuPUZtz7j1mey+BM84Qn/Izxufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59x6zNufcatz7j1Gbc+49Zn3PqMW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Obc+59bn3PqcW59z63Nufc6tz7n1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19w6wtufcGtL7j1Bbe+4NYX3PqCW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n15eIDdhefsMutL7n15eJDdjefsstXH7e+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+5NaX3PqSW19y60tufcmtL7n1Jbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w6xtufcOtb7j1Dbe+4dY33PqGW99w65MLx76jwbvvaHTR2KLxRROLJhdNLRo8/45meMPZ72hk0eAJeDS2aHzRxKLBM/BoatHgIXg0wxsOgEcjiwaPwaOxReOLJhYNHoRHU4sGT8KjGd5wCjwaWTR4Fh6NLRpfNLFo8DQ8mlo0eBwezfCGo+DRyKLRRYMX4tH4oolFk4umFg2eiUez2Imx2Imx2Imx2Imx2ImcCI9msRNjsRNjsRNjsRNjsRNzsRNzsRNzsRNzsRM5Fh7NYifmYifmYifmYifmYifWYifWYifWYifWYidyNjyaxU6sxU6sxU6sxU6sxU7sxU7sxU7sxU7sxU7kgHg0i53Yi53Yi53Yi53Yi504i504i504i504i53IKfFoFjtxFjtxFjtxFjtx4Ymy8ERZeKIsPFEWnniM5UUTiyYXTS0avhNl4Ymy8ERZeKIsPFEWnigLT5SFJ8rCE2XhibLwRFl4oiw8URaeKAtPlIUnysITZeGJsvBEWXiiLDxRFp4oC0+UhSfKwhNl4Ymy8ERZeKIsPFEWnigLT5SFJ8rCE2XhibLwRFl4oiw8URaeKAtPlIUnysITZeGJsvBEWXiiLDxRFp4oC0+UhSfKwhNl4Ymy8ERZeKIsPFEWnigLT5SFJ8rCE2XhibLwRFl4oiw8URaeKAtPlIUnysITZeGJsvBEWXiiLDxRFp4oC0+UhSfKwhNl4Ymy8ERZeKIsPFEWnigLT5SFJ8rCE2XhibLwRFl4oiw8URaeKAtPlIUnysITZeGJcu6Jx9fnR3S8i7++e85F8ZVKz03x1UpWla4qW1W+qmJVnd4XBxlcflbd11Wtql5Vs6nOnfHVSlaVripbVef3hvnzaD80Ya6rWFW5qmpV9aqaTXVuj69WsqrO7w2Peq684rqyVeWrKlbV+b3h/7zahFzfvecS+WrVq2podTx49/n+4eH+998ent7ffr1/evxypMeX/3f7+f723cPdj4cfvz2+/9ezX///6fmZ5/7T56f3dx++fb776zv9/dzx7f8E","file_map":{"62":{"source":"// Advanced Password Strength Check\n// Checks if password has at least 3 of 4 criteria: uppercase, lowercase, number, symbol, and minimum length\n\nfn main(password: [u8; 24]) -> pub bool {\n    let mut has_upper = false;\n    let mut has_lower = false;\n    let mut has_number = false;\n    let mut has_symbol = false;\n    let mut length_count = 0;\n\n    for i in 0..24 {\n        let c = password[i];\n\n        // Count non-null characters for length\n        if c != 0 {\n            length_count = length_count + 1;\n        }\n\n        // Uppercase (A-Z = 65-90)\n        if c >= 65 & c <= 90 {\n            has_upper = true;\n        }\n\n        // Lowercase (a-z = 97-122)\n        if c >= 97 & c <= 122 {\n            has_lower = true;\n        }\n\n        // Numbers (0-9 = 48-57)\n        if c >= 48 & c <= 57 {\n            has_number = true;\n        }\n\n        // Symbols (simplified: ! and @)\n        if c == 33 {\n            has_symbol = true;\n        }\n        if c == 64 {\n            has_symbol = true;\n        }\n    }\n\n    // Count how many criteria are met\n    let mut criteria_count = 0;\n    if has_upper {\n        criteria_count = criteria_count + 1;\n    }\n    if has_lower {\n        criteria_count = criteria_count + 1;\n    }\n    if has_number {\n        criteria_count = criteria_count + 1;\n    }\n    if has_symbol {\n        criteria_count = criteria_count + 1;\n    }\n\n    // Must have at least 12 characters AND at least 3 of 4 criteria\n    let length_ok = length_count >= 12;\n    let criteria_ok = criteria_count >= 3;\n\n    length_ok & criteria_ok\n}\n\n#[test]\nfn test_strong_password() {\n    let password = [\n        75, 106, 56, 35, 109, 78, 50, 36, 112, 76, 57, 64, 120, 81, 55, 38, 118, 82, 52, 33, 0, 0,\n        0, 0,\n    ];\n    let result = main(password);\n    assert(result == true);\n}\n\n#[test]\nfn test_weak_password() {\n    let password =\n        [112, 97, 115, 115, 119, 111, 114, 100, 49, 50, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let result = main(password);\n    assert(result == false);\n}\n\n#[test]\nfn test_medium_password() {\n    // \"Password123\" - has uppercase, lowercase, and numbers (3 criteria)\n    let password =\n        [80, 97, 115, 115, 119, 111, 114, 100, 49, 50, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let result = main(password);\n    assert(result == false); // Only 11 chars, needs 12\n}\n\n#[test]\nfn test_long_password() {\n    // \"Password123!\" - 12 chars with uppercase, lowercase, numbers, and symbol (4 criteria)\n    let password =\n        [80, 97, 115, 115, 119, 111, 114, 100, 49, 50, 51, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let result = main(password);\n    assert(result == true);\n}\n\n#[test]\nfn test_three_criteria() {\n    // \"Password123\" - 12 chars with uppercase, lowercase, numbers (3 criteria, no symbols)\n    let password =\n        [80, 97, 115, 115, 119, 111, 114, 100, 49, 50, 51, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let result = main(password);\n    assert(result == true);\n}\n","path":"/Users/nathalia/Personal/work/open-source-contributions/ShadowVault/noir-circuits/password_strength/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert","directive_integer_quotient"]}